start: invariants

invariants: (invariant /\n+/)+ -> multiple_invariants

invariant: "loop" /\s+/ "invariant" /\s+/ pred ";" -> invariant

STRING: /"([^"\\]|\\.)*"/

INTEGER: /[0-9]+/

REAL: /[0-9]+\.[0-9]+/

CHAR: /'([^'\\]|\\.)'/

TRUE: "\true"

FALSE: "\false"

IDENTIFIER: /[a-zA-Z_][a-zA-Z0-9_]*/

unary_logic_op: "~" 

bin_logic_op: "&&" | "||" | "=>" | "<=>" 

rel_arith_op: "==" | "!=" | "<" | "<=" | ">" | ">="

unary_arith_op: "-"

bin_arith_op: "+" | "-" | "*" | "/" | "%" | "^"

expr: INTEGER 
    | REAL 
    | CHAR 
    | STRING 
    | IDENTIFIER 
    | IDENTIFIER /\s+/ "(" /\s+/ expr /\s+/ ("," /\s+/ expr)* /\s+/ ")"
    | "(" /\s+/ expr /\s+/ ")" 
    | unary_arith_op /\s+/ expr 
    | expr /\s+/ bin_arith_op /\s+/ expr 
    | expr /\s+/ "?" /\s+/ expr /\s+/ ":" /\s+/ expr

pred: TRUE 
    | FALSE 
    | "(" /\s+/ pred /\s+/ ")"
    | expr
    | unary_logic_op /\s+/ pred 
    | pred /\s+/ bin_logic_op /\s+/ pred 
    | expr /\s+/ rel_arith_op /\s+/ expr
